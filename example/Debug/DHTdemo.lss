
DHTdemo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000872  00000906  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000872  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  00800126  00800126  0000092c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000065e  00000000  00000000  00000a08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000360  00000000  00000000  00001066  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003fd  00000000  00000000  000013c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  000017c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000283  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004c0  00000000  00000000  00001b3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00001ffb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e7       	ldi	r30, 0x72	; 114
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 35       	cpi	r26, 0x58	; 88
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  9e:	0c 94 37 04 	jmp	0x86e	; 0x86e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <DHT11_readByte>:
}

uint8_t DHT11_readByte(void) {
	uint8_t DHT11_counter = 0;
	uint8_t DHT11_data = 0x00;	
	DHT_DDR &=~ (1<<DHT_WIRE);
  a6:	52 98       	cbi	0x0a, 2	; 10
	for(int DHT11_i = 7; DHT11_i >= 0; DHT11_i--) {
  a8:	27 e0       	ldi	r18, 0x07	; 7
  aa:	30 e0       	ldi	r19, 0x00	; 0
	return DHT11_OK;
}

uint8_t DHT11_readByte(void) {
	uint8_t DHT11_counter = 0;
	uint8_t DHT11_data = 0x00;	
  ac:	80 e0       	ldi	r24, 0x00	; 0
	DHT_DDR &=~ (1<<DHT_WIRE);
	for(int DHT11_i = 7; DHT11_i >= 0; DHT11_i--) {
		DHT11_counter = 0;
		while(!(DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 10)) {
  ae:	ea e0       	ldi	r30, 0x0A	; 10
			_delay_us(10);
			DHT11_counter++;
		}
		DHT11_counter = 0;
		while((DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 15)) {
  b0:	f0 e0       	ldi	r31, 0x00	; 0
			_delay_us(10);
			DHT11_counter++;
		}
		if(DHT11_counter > 5) {
			DHT11_data += (1<<DHT11_i);
  b2:	61 e0       	ldi	r22, 0x01	; 1
  b4:	70 e0       	ldi	r23, 0x00	; 0
  b6:	20 c0       	rjmp	.+64     	; 0xf8 <DHT11_readByte+0x52>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b8:	45 e3       	ldi	r20, 0x35	; 53
  ba:	4a 95       	dec	r20
  bc:	f1 f7       	brne	.-4      	; 0xba <DHT11_readByte+0x14>
  be:	00 00       	nop
	uint8_t DHT11_counter = 0;
	uint8_t DHT11_data = 0x00;	
	DHT_DDR &=~ (1<<DHT_WIRE);
	for(int DHT11_i = 7; DHT11_i >= 0; DHT11_i--) {
		DHT11_counter = 0;
		while(!(DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 10)) {
  c0:	4a 99       	sbic	0x09, 2	; 9
  c2:	1e c0       	rjmp	.+60     	; 0x100 <DHT11_readByte+0x5a>
  c4:	91 50       	subi	r25, 0x01	; 1
  c6:	c1 f7       	brne	.-16     	; 0xb8 <DHT11_readByte+0x12>
  c8:	1b c0       	rjmp	.+54     	; 0x100 <DHT11_readByte+0x5a>
  ca:	45 e3       	ldi	r20, 0x35	; 53
  cc:	4a 95       	dec	r20
  ce:	f1 f7       	brne	.-4      	; 0xcc <DHT11_readByte+0x26>
  d0:	00 00       	nop
			DHT11_counter++;
		}
		DHT11_counter = 0;
		while((DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 15)) {
			_delay_us(10);
			DHT11_counter++;
  d2:	9f 5f       	subi	r25, 0xFF	; 255
		while(!(DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 10)) {
			_delay_us(10);
			DHT11_counter++;
		}
		DHT11_counter = 0;
		while((DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 15)) {
  d4:	4a 9b       	sbis	0x09, 2	; 9
  d6:	03 c0       	rjmp	.+6      	; 0xde <DHT11_readByte+0x38>
  d8:	9f 30       	cpi	r25, 0x0F	; 15
  da:	b9 f7       	brne	.-18     	; 0xca <DHT11_readByte+0x24>
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DHT11_readByte+0x3c>
			_delay_us(10);
			DHT11_counter++;
		}
		if(DHT11_counter > 5) {
  de:	96 30       	cpi	r25, 0x06	; 6
  e0:	40 f0       	brcs	.+16     	; 0xf2 <DHT11_readByte+0x4c>
			DHT11_data += (1<<DHT11_i);
  e2:	ab 01       	movw	r20, r22
  e4:	02 2e       	mov	r0, r18
  e6:	02 c0       	rjmp	.+4      	; 0xec <DHT11_readByte+0x46>
  e8:	44 0f       	add	r20, r20
  ea:	55 1f       	adc	r21, r21
  ec:	0a 94       	dec	r0
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <DHT11_readByte+0x42>
  f0:	84 0f       	add	r24, r20

uint8_t DHT11_readByte(void) {
	uint8_t DHT11_counter = 0;
	uint8_t DHT11_data = 0x00;	
	DHT_DDR &=~ (1<<DHT_WIRE);
	for(int DHT11_i = 7; DHT11_i >= 0; DHT11_i--) {
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	31 09       	sbc	r19, r1
  f6:	40 f0       	brcs	.+16     	; 0x108 <DHT11_readByte+0x62>
		DHT11_counter = 0;
		while(!(DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 10)) {
  f8:	4a 99       	sbic	0x09, 2	; 9
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DHT11_readByte+0x5a>
  fc:	9e 2f       	mov	r25, r30
  fe:	dc cf       	rjmp	.-72     	; 0xb8 <DHT11_readByte+0x12>
			_delay_us(10);
			DHT11_counter++;
		}
		DHT11_counter = 0;
		while((DHT_PIN & (1<<DHT_WIRE)) && (DHT11_counter < 15)) {
 100:	4a 9b       	sbis	0x09, 2	; 9
 102:	f7 cf       	rjmp	.-18     	; 0xf2 <DHT11_readByte+0x4c>
 104:	9f 2f       	mov	r25, r31
 106:	e1 cf       	rjmp	.-62     	; 0xca <DHT11_readByte+0x24>
		if(DHT11_counter > 5) {
			DHT11_data += (1<<DHT11_i);
		}
	}
	return DHT11_data;
}
 108:	08 95       	ret

0000010a <DHT11_getData>:
#include <avr/io.h>
#include <util/delay.h>
#include <stdint.h>
#include "DHT11.h"

uint8_t DHT11_getData(int8_t* temperature, uint8_t* humidity) {
 10a:	ef 92       	push	r14
 10c:	ff 92       	push	r15
 10e:	0f 93       	push	r16
 110:	1f 93       	push	r17
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	ec 01       	movw	r28, r24
 118:	8b 01       	movw	r16, r22
	//Setting pins
	DHT_DDR &=~ (1<<DHT_WIRE);
 11a:	52 98       	cbi	0x0a, 2	; 10
	DHT_PORT &=~ (1<<DHT_WIRE);
 11c:	5a 98       	cbi	0x0b, 2	; 11
	
	//Checking data line
	if(!(DHT_PIN & (1<<DHT_WIRE))) {
 11e:	4a 99       	sbic	0x09, 2	; 9
 120:	08 c0       	rjmp	.+16     	; 0x132 <DHT11_getData+0x28>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 122:	8f e3       	ldi	r24, 0x3F	; 63
 124:	9c e9       	ldi	r25, 0x9C	; 156
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <DHT11_getData+0x1c>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <DHT11_getData+0x22>
 12c:	00 00       	nop
		_delay_ms(10);
		if(!(DHT_PIN & (1<<DHT_WIRE))) return DHT11_ERROR;
 12e:	4a 9b       	sbis	0x09, 2	; 9
 130:	28 c0       	rjmp	.+80     	; 0x182 <DHT11_getData+0x78>
	}
	
	//Start signal
	DHT_DDR |= (1<<DHT_WIRE);
 132:	52 9a       	sbi	0x0a, 2	; 10
 134:	9f ef       	ldi	r25, 0xFF	; 255
 136:	e9 ef       	ldi	r30, 0xF9	; 249
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	91 50       	subi	r25, 0x01	; 1
 13c:	e0 40       	sbci	r30, 0x00	; 0
 13e:	f0 40       	sbci	r31, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <DHT11_getData+0x30>
 142:	00 c0       	rjmp	.+0      	; 0x144 <DHT11_getData+0x3a>
 144:	00 00       	nop
	_delay_ms(20);	
	DHT_DDR &=~ (1<<DHT_WIRE);
 146:	52 98       	cbi	0x0a, 2	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 148:	8f ee       	ldi	r24, 0xEF	; 239
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <DHT11_getData+0x42>
 150:	00 c0       	rjmp	.+0      	; 0x152 <DHT11_getData+0x48>
 152:	00 00       	nop
	_delay_us(60);
	if(DHT_PIN & (1<<DHT_WIRE)) {
 154:	4a 99       	sbic	0x09, 2	; 9
 156:	17 c0       	rjmp	.+46     	; 0x186 <DHT11_getData+0x7c>
		return DHT11_ERROR;
	}
	while(!(DHT_PIN & (1<<DHT_WIRE)));
 158:	4a 9b       	sbis	0x09, 2	; 9
 15a:	fe cf       	rjmp	.-4      	; 0x158 <DHT11_getData+0x4e>
	while(DHT_PIN & (1<<DHT_WIRE));
 15c:	4a 99       	sbic	0x09, 2	; 9
 15e:	fe cf       	rjmp	.-4      	; 0x15c <DHT11_getData+0x52>
	
	//Data bytes
	uint8_t DHT11_RH_integral = DHT11_readByte();
 160:	0e 94 53 00 	call	0xa6	; 0xa6 <DHT11_readByte>
 164:	e8 2e       	mov	r14, r24
	DHT11_readByte();
 166:	0e 94 53 00 	call	0xa6	; 0xa6 <DHT11_readByte>
	uint8_t DHT11_T_integral  = DHT11_readByte();
 16a:	0e 94 53 00 	call	0xa6	; 0xa6 <DHT11_readByte>
 16e:	f8 2e       	mov	r15, r24
	DHT11_readByte();
 170:	0e 94 53 00 	call	0xa6	; 0xa6 <DHT11_readByte>
		DHT11_checksum_my += DHT11_T_integral;
		if(DHT11_checksum_my != DHT11_checksum) {
			return DHT11_ERROR;
		}
	#else
		DHT11_readByte();
 174:	0e 94 53 00 	call	0xa6	; 0xa6 <DHT11_readByte>
	#endif
	
	*humidity = DHT11_RH_integral;
 178:	f8 01       	movw	r30, r16
 17a:	e0 82       	st	Z, r14
	*temperature = DHT11_T_integral;
 17c:	f8 82       	st	Y, r15
		
	return DHT11_OK;
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	03 c0       	rjmp	.+6      	; 0x188 <DHT11_getData+0x7e>
	DHT_PORT &=~ (1<<DHT_WIRE);
	
	//Checking data line
	if(!(DHT_PIN & (1<<DHT_WIRE))) {
		_delay_ms(10);
		if(!(DHT_PIN & (1<<DHT_WIRE))) return DHT11_ERROR;
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	01 c0       	rjmp	.+2      	; 0x188 <DHT11_getData+0x7e>
	DHT_DDR |= (1<<DHT_WIRE);
	_delay_ms(20);	
	DHT_DDR &=~ (1<<DHT_WIRE);
	_delay_us(60);
	if(DHT_PIN & (1<<DHT_WIRE)) {
		return DHT11_ERROR;
 186:	80 e0       	ldi	r24, 0x00	; 0
	
	*humidity = DHT11_RH_integral;
	*temperature = DHT11_T_integral;
		
	return DHT11_OK;
}
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	1f 91       	pop	r17
 18e:	0f 91       	pop	r16
 190:	ff 90       	pop	r15
 192:	ef 90       	pop	r14
 194:	08 95       	ret

00000196 <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	8f e3       	ldi	r24, 0x3F	; 63
 198:	9c e9       	ldi	r25, 0x9C	; 156
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <main+0x4>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <main+0xa>
 1a0:	00 00       	nop
uint8_t hum = 0;

int main(void)
{
	_delay_ms(10);
	USART_send(0);
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	0e 94 2c 01 	call	0x258	; 0x258 <USART_send>
	USART_init(38400);
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	96 e9       	ldi	r25, 0x96	; 150
 1ac:	0e 94 14 01 	call	0x228	; 0x228 <USART_init>
	USART_send_string("DHT11 tester\r\n");	
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	0e 94 34 01 	call	0x268	; 0x268 <USART_send_string>
	
    while(1)
    {
	    if(DHT11_getData(&temp, &hum)) {		
			//sprintf(buf, "T: %i C\t H: %u%%\r\n", temp, hum);
			sprintf(buf, "$%i;%u\r\n", temp, hum);
 1b8:	0f e0       	ldi	r16, 0x0F	; 15
 1ba:	11 e0       	ldi	r17, 0x01	; 1
 1bc:	c8 e2       	ldi	r28, 0x28	; 40
 1be:	d1 e0       	ldi	r29, 0x01	; 1
	USART_init(38400);
	USART_send_string("DHT11 tester\r\n");	
	
    while(1)
    {
	    if(DHT11_getData(&temp, &hum)) {		
 1c0:	66 e2       	ldi	r22, 0x26	; 38
 1c2:	71 e0       	ldi	r23, 0x01	; 1
 1c4:	87 e2       	ldi	r24, 0x27	; 39
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 85 00 	call	0x10a	; 0x10a <DHT11_getData>
 1cc:	88 23       	and	r24, r24
 1ce:	f1 f0       	breq	.+60     	; 0x20c <main+0x76>
			//sprintf(buf, "T: %i C\t H: %u%%\r\n", temp, hum);
			sprintf(buf, "$%i;%u\r\n", temp, hum);
 1d0:	80 91 26 01 	lds	r24, 0x0126
 1d4:	1f 92       	push	r1
 1d6:	8f 93       	push	r24
 1d8:	20 91 27 01 	lds	r18, 0x0127
 1dc:	82 2f       	mov	r24, r18
 1de:	99 27       	eor	r25, r25
 1e0:	87 fd       	sbrc	r24, 7
 1e2:	90 95       	com	r25
 1e4:	9f 93       	push	r25
 1e6:	2f 93       	push	r18
 1e8:	1f 93       	push	r17
 1ea:	0f 93       	push	r16
 1ec:	df 93       	push	r29
 1ee:	cf 93       	push	r28
 1f0:	0e 94 66 01 	call	0x2cc	; 0x2cc <sprintf>
			USART_send_string(buf);
 1f4:	ce 01       	movw	r24, r28
 1f6:	0e 94 34 01 	call	0x268	; 0x268 <USART_send_string>
 1fa:	8d b7       	in	r24, 0x3d	; 61
 1fc:	9e b7       	in	r25, 0x3e	; 62
 1fe:	08 96       	adiw	r24, 0x08	; 8
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	9e bf       	out	0x3e, r25	; 62
 206:	0f be       	out	0x3f, r0	; 63
 208:	8d bf       	out	0x3d, r24	; 61
 20a:	04 c0       	rjmp	.+8      	; 0x214 <main+0x7e>
		}
		else {			
			USART_send_string("DHT11 error\r\n");
 20c:	88 e1       	ldi	r24, 0x18	; 24
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	0e 94 34 01 	call	0x268	; 0x268 <USART_send_string>
 214:	9f ef       	ldi	r25, 0xFF	; 255
 216:	27 ea       	ldi	r18, 0xA7	; 167
 218:	81 e6       	ldi	r24, 0x61	; 97
 21a:	91 50       	subi	r25, 0x01	; 1
 21c:	20 40       	sbci	r18, 0x00	; 0
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0x84>
 222:	00 c0       	rjmp	.+0      	; 0x224 <main+0x8e>
 224:	00 00       	nop
 226:	cc cf       	rjmp	.-104    	; 0x1c0 <main+0x2a>

00000228 <USART_init>:
 228:	50 98       	cbi	0x0a, 0	; 10
 22a:	51 9a       	sbi	0x0a, 1	; 10
 22c:	9c 01       	movw	r18, r24
 22e:	40 e0       	ldi	r20, 0x00	; 0
 230:	50 e0       	ldi	r21, 0x00	; 0
 232:	60 e4       	ldi	r22, 0x40	; 64
 234:	72 e4       	ldi	r23, 0x42	; 66
 236:	8f e0       	ldi	r24, 0x0F	; 15
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 44 01 	call	0x288	; 0x288 <__udivmodsi4>
 23e:	21 50       	subi	r18, 0x01	; 1
 240:	31 09       	sbc	r19, r1
 242:	30 93 c5 00 	sts	0x00C5, r19
 246:	20 93 c4 00 	sts	0x00C4, r18
 24a:	88 e9       	ldi	r24, 0x98	; 152
 24c:	80 93 c1 00 	sts	0x00C1, r24
 250:	86 e0       	ldi	r24, 0x06	; 6
 252:	80 93 c2 00 	sts	0x00C2, r24
 256:	08 95       	ret

00000258 <USART_send>:
 258:	e0 ec       	ldi	r30, 0xC0	; 192
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	90 81       	ld	r25, Z
 25e:	95 ff       	sbrs	r25, 5
 260:	fd cf       	rjmp	.-6      	; 0x25c <USART_send+0x4>
 262:	80 93 c6 00 	sts	0x00C6, r24
 266:	08 95       	ret

00000268 <USART_send_string>:
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	ec 01       	movw	r28, r24
 26e:	21 96       	adiw	r28, 0x01	; 1
 270:	fc 01       	movw	r30, r24
 272:	80 81       	ld	r24, Z
 274:	88 23       	and	r24, r24
 276:	29 f0       	breq	.+10     	; 0x282 <USART_send_string+0x1a>
 278:	0e 94 2c 01 	call	0x258	; 0x258 <USART_send>
 27c:	89 91       	ld	r24, Y+
 27e:	81 11       	cpse	r24, r1
 280:	fb cf       	rjmp	.-10     	; 0x278 <USART_send_string+0x10>
 282:	df 91       	pop	r29
 284:	cf 91       	pop	r28
 286:	08 95       	ret

00000288 <__udivmodsi4>:
 288:	a1 e2       	ldi	r26, 0x21	; 33
 28a:	1a 2e       	mov	r1, r26
 28c:	aa 1b       	sub	r26, r26
 28e:	bb 1b       	sub	r27, r27
 290:	fd 01       	movw	r30, r26
 292:	0d c0       	rjmp	.+26     	; 0x2ae <__udivmodsi4_ep>

00000294 <__udivmodsi4_loop>:
 294:	aa 1f       	adc	r26, r26
 296:	bb 1f       	adc	r27, r27
 298:	ee 1f       	adc	r30, r30
 29a:	ff 1f       	adc	r31, r31
 29c:	a2 17       	cp	r26, r18
 29e:	b3 07       	cpc	r27, r19
 2a0:	e4 07       	cpc	r30, r20
 2a2:	f5 07       	cpc	r31, r21
 2a4:	20 f0       	brcs	.+8      	; 0x2ae <__udivmodsi4_ep>
 2a6:	a2 1b       	sub	r26, r18
 2a8:	b3 0b       	sbc	r27, r19
 2aa:	e4 0b       	sbc	r30, r20
 2ac:	f5 0b       	sbc	r31, r21

000002ae <__udivmodsi4_ep>:
 2ae:	66 1f       	adc	r22, r22
 2b0:	77 1f       	adc	r23, r23
 2b2:	88 1f       	adc	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	1a 94       	dec	r1
 2b8:	69 f7       	brne	.-38     	; 0x294 <__udivmodsi4_loop>
 2ba:	60 95       	com	r22
 2bc:	70 95       	com	r23
 2be:	80 95       	com	r24
 2c0:	90 95       	com	r25
 2c2:	9b 01       	movw	r18, r22
 2c4:	ac 01       	movw	r20, r24
 2c6:	bd 01       	movw	r22, r26
 2c8:	cf 01       	movw	r24, r30
 2ca:	08 95       	ret

000002cc <sprintf>:
 2cc:	ae e0       	ldi	r26, 0x0E	; 14
 2ce:	b0 e0       	ldi	r27, 0x00	; 0
 2d0:	ec e6       	ldi	r30, 0x6C	; 108
 2d2:	f1 e0       	ldi	r31, 0x01	; 1
 2d4:	0c 94 0e 04 	jmp	0x81c	; 0x81c <__prologue_saves__+0x1c>
 2d8:	0d 89       	ldd	r16, Y+21	; 0x15
 2da:	1e 89       	ldd	r17, Y+22	; 0x16
 2dc:	86 e0       	ldi	r24, 0x06	; 6
 2de:	8c 83       	std	Y+4, r24	; 0x04
 2e0:	1a 83       	std	Y+2, r17	; 0x02
 2e2:	09 83       	std	Y+1, r16	; 0x01
 2e4:	8f ef       	ldi	r24, 0xFF	; 255
 2e6:	9f e7       	ldi	r25, 0x7F	; 127
 2e8:	9e 83       	std	Y+6, r25	; 0x06
 2ea:	8d 83       	std	Y+5, r24	; 0x05
 2ec:	ae 01       	movw	r20, r28
 2ee:	47 5e       	subi	r20, 0xE7	; 231
 2f0:	5f 4f       	sbci	r21, 0xFF	; 255
 2f2:	6f 89       	ldd	r22, Y+23	; 0x17
 2f4:	78 8d       	ldd	r23, Y+24	; 0x18
 2f6:	ce 01       	movw	r24, r28
 2f8:	01 96       	adiw	r24, 0x01	; 1
 2fa:	0e 94 88 01 	call	0x310	; 0x310 <vfprintf>
 2fe:	ef 81       	ldd	r30, Y+7	; 0x07
 300:	f8 85       	ldd	r31, Y+8	; 0x08
 302:	e0 0f       	add	r30, r16
 304:	f1 1f       	adc	r31, r17
 306:	10 82       	st	Z, r1
 308:	2e 96       	adiw	r28, 0x0e	; 14
 30a:	e4 e0       	ldi	r30, 0x04	; 4
 30c:	0c 94 2a 04 	jmp	0x854	; 0x854 <__epilogue_restores__+0x1c>

00000310 <vfprintf>:
 310:	ac e0       	ldi	r26, 0x0C	; 12
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	ee e8       	ldi	r30, 0x8E	; 142
 316:	f1 e0       	ldi	r31, 0x01	; 1
 318:	0c 94 00 04 	jmp	0x800	; 0x800 <__prologue_saves__>
 31c:	7c 01       	movw	r14, r24
 31e:	6b 01       	movw	r12, r22
 320:	8a 01       	movw	r16, r20
 322:	fc 01       	movw	r30, r24
 324:	17 82       	std	Z+7, r1	; 0x07
 326:	16 82       	std	Z+6, r1	; 0x06
 328:	83 81       	ldd	r24, Z+3	; 0x03
 32a:	81 ff       	sbrs	r24, 1
 32c:	bd c1       	rjmp	.+890    	; 0x6a8 <vfprintf+0x398>
 32e:	ce 01       	movw	r24, r28
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	4c 01       	movw	r8, r24
 334:	f7 01       	movw	r30, r14
 336:	93 81       	ldd	r25, Z+3	; 0x03
 338:	f6 01       	movw	r30, r12
 33a:	93 fd       	sbrc	r25, 3
 33c:	85 91       	lpm	r24, Z+
 33e:	93 ff       	sbrs	r25, 3
 340:	81 91       	ld	r24, Z+
 342:	6f 01       	movw	r12, r30
 344:	88 23       	and	r24, r24
 346:	09 f4       	brne	.+2      	; 0x34a <vfprintf+0x3a>
 348:	ab c1       	rjmp	.+854    	; 0x6a0 <vfprintf+0x390>
 34a:	85 32       	cpi	r24, 0x25	; 37
 34c:	39 f4       	brne	.+14     	; 0x35c <vfprintf+0x4c>
 34e:	93 fd       	sbrc	r25, 3
 350:	85 91       	lpm	r24, Z+
 352:	93 ff       	sbrs	r25, 3
 354:	81 91       	ld	r24, Z+
 356:	6f 01       	movw	r12, r30
 358:	85 32       	cpi	r24, 0x25	; 37
 35a:	29 f4       	brne	.+10     	; 0x366 <vfprintf+0x56>
 35c:	b7 01       	movw	r22, r14
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 364:	e7 cf       	rjmp	.-50     	; 0x334 <vfprintf+0x24>
 366:	51 2c       	mov	r5, r1
 368:	31 2c       	mov	r3, r1
 36a:	20 e0       	ldi	r18, 0x00	; 0
 36c:	20 32       	cpi	r18, 0x20	; 32
 36e:	a0 f4       	brcc	.+40     	; 0x398 <vfprintf+0x88>
 370:	8b 32       	cpi	r24, 0x2B	; 43
 372:	69 f0       	breq	.+26     	; 0x38e <vfprintf+0x7e>
 374:	30 f4       	brcc	.+12     	; 0x382 <vfprintf+0x72>
 376:	80 32       	cpi	r24, 0x20	; 32
 378:	59 f0       	breq	.+22     	; 0x390 <vfprintf+0x80>
 37a:	83 32       	cpi	r24, 0x23	; 35
 37c:	69 f4       	brne	.+26     	; 0x398 <vfprintf+0x88>
 37e:	20 61       	ori	r18, 0x10	; 16
 380:	2c c0       	rjmp	.+88     	; 0x3da <vfprintf+0xca>
 382:	8d 32       	cpi	r24, 0x2D	; 45
 384:	39 f0       	breq	.+14     	; 0x394 <vfprintf+0x84>
 386:	80 33       	cpi	r24, 0x30	; 48
 388:	39 f4       	brne	.+14     	; 0x398 <vfprintf+0x88>
 38a:	21 60       	ori	r18, 0x01	; 1
 38c:	26 c0       	rjmp	.+76     	; 0x3da <vfprintf+0xca>
 38e:	22 60       	ori	r18, 0x02	; 2
 390:	24 60       	ori	r18, 0x04	; 4
 392:	23 c0       	rjmp	.+70     	; 0x3da <vfprintf+0xca>
 394:	28 60       	ori	r18, 0x08	; 8
 396:	21 c0       	rjmp	.+66     	; 0x3da <vfprintf+0xca>
 398:	27 fd       	sbrc	r18, 7
 39a:	27 c0       	rjmp	.+78     	; 0x3ea <vfprintf+0xda>
 39c:	30 ed       	ldi	r19, 0xD0	; 208
 39e:	38 0f       	add	r19, r24
 3a0:	3a 30       	cpi	r19, 0x0A	; 10
 3a2:	78 f4       	brcc	.+30     	; 0x3c2 <vfprintf+0xb2>
 3a4:	26 ff       	sbrs	r18, 6
 3a6:	06 c0       	rjmp	.+12     	; 0x3b4 <vfprintf+0xa4>
 3a8:	fa e0       	ldi	r31, 0x0A	; 10
 3aa:	5f 9e       	mul	r5, r31
 3ac:	30 0d       	add	r19, r0
 3ae:	11 24       	eor	r1, r1
 3b0:	53 2e       	mov	r5, r19
 3b2:	13 c0       	rjmp	.+38     	; 0x3da <vfprintf+0xca>
 3b4:	8a e0       	ldi	r24, 0x0A	; 10
 3b6:	38 9e       	mul	r3, r24
 3b8:	30 0d       	add	r19, r0
 3ba:	11 24       	eor	r1, r1
 3bc:	33 2e       	mov	r3, r19
 3be:	20 62       	ori	r18, 0x20	; 32
 3c0:	0c c0       	rjmp	.+24     	; 0x3da <vfprintf+0xca>
 3c2:	8e 32       	cpi	r24, 0x2E	; 46
 3c4:	21 f4       	brne	.+8      	; 0x3ce <vfprintf+0xbe>
 3c6:	26 fd       	sbrc	r18, 6
 3c8:	6b c1       	rjmp	.+726    	; 0x6a0 <vfprintf+0x390>
 3ca:	20 64       	ori	r18, 0x40	; 64
 3cc:	06 c0       	rjmp	.+12     	; 0x3da <vfprintf+0xca>
 3ce:	8c 36       	cpi	r24, 0x6C	; 108
 3d0:	11 f4       	brne	.+4      	; 0x3d6 <vfprintf+0xc6>
 3d2:	20 68       	ori	r18, 0x80	; 128
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <vfprintf+0xca>
 3d6:	88 36       	cpi	r24, 0x68	; 104
 3d8:	41 f4       	brne	.+16     	; 0x3ea <vfprintf+0xda>
 3da:	f6 01       	movw	r30, r12
 3dc:	93 fd       	sbrc	r25, 3
 3de:	85 91       	lpm	r24, Z+
 3e0:	93 ff       	sbrs	r25, 3
 3e2:	81 91       	ld	r24, Z+
 3e4:	6f 01       	movw	r12, r30
 3e6:	81 11       	cpse	r24, r1
 3e8:	c1 cf       	rjmp	.-126    	; 0x36c <vfprintf+0x5c>
 3ea:	98 2f       	mov	r25, r24
 3ec:	9f 7d       	andi	r25, 0xDF	; 223
 3ee:	95 54       	subi	r25, 0x45	; 69
 3f0:	93 30       	cpi	r25, 0x03	; 3
 3f2:	28 f4       	brcc	.+10     	; 0x3fe <vfprintf+0xee>
 3f4:	0c 5f       	subi	r16, 0xFC	; 252
 3f6:	1f 4f       	sbci	r17, 0xFF	; 255
 3f8:	ff e3       	ldi	r31, 0x3F	; 63
 3fa:	f9 83       	std	Y+1, r31	; 0x01
 3fc:	0d c0       	rjmp	.+26     	; 0x418 <vfprintf+0x108>
 3fe:	83 36       	cpi	r24, 0x63	; 99
 400:	31 f0       	breq	.+12     	; 0x40e <vfprintf+0xfe>
 402:	83 37       	cpi	r24, 0x73	; 115
 404:	71 f0       	breq	.+28     	; 0x422 <vfprintf+0x112>
 406:	83 35       	cpi	r24, 0x53	; 83
 408:	09 f0       	breq	.+2      	; 0x40c <vfprintf+0xfc>
 40a:	5b c0       	rjmp	.+182    	; 0x4c2 <vfprintf+0x1b2>
 40c:	22 c0       	rjmp	.+68     	; 0x452 <vfprintf+0x142>
 40e:	f8 01       	movw	r30, r16
 410:	80 81       	ld	r24, Z
 412:	89 83       	std	Y+1, r24	; 0x01
 414:	0e 5f       	subi	r16, 0xFE	; 254
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	44 24       	eor	r4, r4
 41a:	43 94       	inc	r4
 41c:	51 2c       	mov	r5, r1
 41e:	54 01       	movw	r10, r8
 420:	15 c0       	rjmp	.+42     	; 0x44c <vfprintf+0x13c>
 422:	38 01       	movw	r6, r16
 424:	f2 e0       	ldi	r31, 0x02	; 2
 426:	6f 0e       	add	r6, r31
 428:	71 1c       	adc	r7, r1
 42a:	f8 01       	movw	r30, r16
 42c:	a0 80       	ld	r10, Z
 42e:	b1 80       	ldd	r11, Z+1	; 0x01
 430:	26 ff       	sbrs	r18, 6
 432:	03 c0       	rjmp	.+6      	; 0x43a <vfprintf+0x12a>
 434:	65 2d       	mov	r22, r5
 436:	70 e0       	ldi	r23, 0x00	; 0
 438:	02 c0       	rjmp	.+4      	; 0x43e <vfprintf+0x12e>
 43a:	6f ef       	ldi	r22, 0xFF	; 255
 43c:	7f ef       	ldi	r23, 0xFF	; 255
 43e:	c5 01       	movw	r24, r10
 440:	2c 87       	std	Y+12, r18	; 0x0c
 442:	0e 94 65 03 	call	0x6ca	; 0x6ca <strnlen>
 446:	2c 01       	movw	r4, r24
 448:	83 01       	movw	r16, r6
 44a:	2c 85       	ldd	r18, Y+12	; 0x0c
 44c:	2f 77       	andi	r18, 0x7F	; 127
 44e:	22 2e       	mov	r2, r18
 450:	17 c0       	rjmp	.+46     	; 0x480 <vfprintf+0x170>
 452:	38 01       	movw	r6, r16
 454:	f2 e0       	ldi	r31, 0x02	; 2
 456:	6f 0e       	add	r6, r31
 458:	71 1c       	adc	r7, r1
 45a:	f8 01       	movw	r30, r16
 45c:	a0 80       	ld	r10, Z
 45e:	b1 80       	ldd	r11, Z+1	; 0x01
 460:	26 ff       	sbrs	r18, 6
 462:	03 c0       	rjmp	.+6      	; 0x46a <vfprintf+0x15a>
 464:	65 2d       	mov	r22, r5
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	02 c0       	rjmp	.+4      	; 0x46e <vfprintf+0x15e>
 46a:	6f ef       	ldi	r22, 0xFF	; 255
 46c:	7f ef       	ldi	r23, 0xFF	; 255
 46e:	c5 01       	movw	r24, r10
 470:	2c 87       	std	Y+12, r18	; 0x0c
 472:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <strnlen_P>
 476:	2c 01       	movw	r4, r24
 478:	2c 85       	ldd	r18, Y+12	; 0x0c
 47a:	20 68       	ori	r18, 0x80	; 128
 47c:	22 2e       	mov	r2, r18
 47e:	83 01       	movw	r16, r6
 480:	23 fc       	sbrc	r2, 3
 482:	1b c0       	rjmp	.+54     	; 0x4ba <vfprintf+0x1aa>
 484:	83 2d       	mov	r24, r3
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	48 16       	cp	r4, r24
 48a:	59 06       	cpc	r5, r25
 48c:	b0 f4       	brcc	.+44     	; 0x4ba <vfprintf+0x1aa>
 48e:	b7 01       	movw	r22, r14
 490:	80 e2       	ldi	r24, 0x20	; 32
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 498:	3a 94       	dec	r3
 49a:	f4 cf       	rjmp	.-24     	; 0x484 <vfprintf+0x174>
 49c:	f5 01       	movw	r30, r10
 49e:	27 fc       	sbrc	r2, 7
 4a0:	85 91       	lpm	r24, Z+
 4a2:	27 fe       	sbrs	r2, 7
 4a4:	81 91       	ld	r24, Z+
 4a6:	5f 01       	movw	r10, r30
 4a8:	b7 01       	movw	r22, r14
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 4b0:	31 10       	cpse	r3, r1
 4b2:	3a 94       	dec	r3
 4b4:	f1 e0       	ldi	r31, 0x01	; 1
 4b6:	4f 1a       	sub	r4, r31
 4b8:	51 08       	sbc	r5, r1
 4ba:	41 14       	cp	r4, r1
 4bc:	51 04       	cpc	r5, r1
 4be:	71 f7       	brne	.-36     	; 0x49c <vfprintf+0x18c>
 4c0:	e5 c0       	rjmp	.+458    	; 0x68c <vfprintf+0x37c>
 4c2:	84 36       	cpi	r24, 0x64	; 100
 4c4:	11 f0       	breq	.+4      	; 0x4ca <vfprintf+0x1ba>
 4c6:	89 36       	cpi	r24, 0x69	; 105
 4c8:	39 f5       	brne	.+78     	; 0x518 <vfprintf+0x208>
 4ca:	f8 01       	movw	r30, r16
 4cc:	27 ff       	sbrs	r18, 7
 4ce:	07 c0       	rjmp	.+14     	; 0x4de <vfprintf+0x1ce>
 4d0:	60 81       	ld	r22, Z
 4d2:	71 81       	ldd	r23, Z+1	; 0x01
 4d4:	82 81       	ldd	r24, Z+2	; 0x02
 4d6:	93 81       	ldd	r25, Z+3	; 0x03
 4d8:	0c 5f       	subi	r16, 0xFC	; 252
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <vfprintf+0x1de>
 4de:	60 81       	ld	r22, Z
 4e0:	71 81       	ldd	r23, Z+1	; 0x01
 4e2:	88 27       	eor	r24, r24
 4e4:	77 fd       	sbrc	r23, 7
 4e6:	80 95       	com	r24
 4e8:	98 2f       	mov	r25, r24
 4ea:	0e 5f       	subi	r16, 0xFE	; 254
 4ec:	1f 4f       	sbci	r17, 0xFF	; 255
 4ee:	2f 76       	andi	r18, 0x6F	; 111
 4f0:	b2 2e       	mov	r11, r18
 4f2:	97 ff       	sbrs	r25, 7
 4f4:	09 c0       	rjmp	.+18     	; 0x508 <vfprintf+0x1f8>
 4f6:	90 95       	com	r25
 4f8:	80 95       	com	r24
 4fa:	70 95       	com	r23
 4fc:	61 95       	neg	r22
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	20 68       	ori	r18, 0x80	; 128
 506:	b2 2e       	mov	r11, r18
 508:	2a e0       	ldi	r18, 0x0A	; 10
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	a4 01       	movw	r20, r8
 50e:	0e 94 a2 03 	call	0x744	; 0x744 <__ultoa_invert>
 512:	a8 2e       	mov	r10, r24
 514:	a8 18       	sub	r10, r8
 516:	44 c0       	rjmp	.+136    	; 0x5a0 <vfprintf+0x290>
 518:	85 37       	cpi	r24, 0x75	; 117
 51a:	29 f4       	brne	.+10     	; 0x526 <vfprintf+0x216>
 51c:	2f 7e       	andi	r18, 0xEF	; 239
 51e:	b2 2e       	mov	r11, r18
 520:	2a e0       	ldi	r18, 0x0A	; 10
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	25 c0       	rjmp	.+74     	; 0x570 <vfprintf+0x260>
 526:	f2 2f       	mov	r31, r18
 528:	f9 7f       	andi	r31, 0xF9	; 249
 52a:	bf 2e       	mov	r11, r31
 52c:	8f 36       	cpi	r24, 0x6F	; 111
 52e:	c1 f0       	breq	.+48     	; 0x560 <vfprintf+0x250>
 530:	18 f4       	brcc	.+6      	; 0x538 <vfprintf+0x228>
 532:	88 35       	cpi	r24, 0x58	; 88
 534:	79 f0       	breq	.+30     	; 0x554 <vfprintf+0x244>
 536:	b4 c0       	rjmp	.+360    	; 0x6a0 <vfprintf+0x390>
 538:	80 37       	cpi	r24, 0x70	; 112
 53a:	19 f0       	breq	.+6      	; 0x542 <vfprintf+0x232>
 53c:	88 37       	cpi	r24, 0x78	; 120
 53e:	21 f0       	breq	.+8      	; 0x548 <vfprintf+0x238>
 540:	af c0       	rjmp	.+350    	; 0x6a0 <vfprintf+0x390>
 542:	2f 2f       	mov	r18, r31
 544:	20 61       	ori	r18, 0x10	; 16
 546:	b2 2e       	mov	r11, r18
 548:	b4 fe       	sbrs	r11, 4
 54a:	0d c0       	rjmp	.+26     	; 0x566 <vfprintf+0x256>
 54c:	8b 2d       	mov	r24, r11
 54e:	84 60       	ori	r24, 0x04	; 4
 550:	b8 2e       	mov	r11, r24
 552:	09 c0       	rjmp	.+18     	; 0x566 <vfprintf+0x256>
 554:	24 ff       	sbrs	r18, 4
 556:	0a c0       	rjmp	.+20     	; 0x56c <vfprintf+0x25c>
 558:	9f 2f       	mov	r25, r31
 55a:	96 60       	ori	r25, 0x06	; 6
 55c:	b9 2e       	mov	r11, r25
 55e:	06 c0       	rjmp	.+12     	; 0x56c <vfprintf+0x25c>
 560:	28 e0       	ldi	r18, 0x08	; 8
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	05 c0       	rjmp	.+10     	; 0x570 <vfprintf+0x260>
 566:	20 e1       	ldi	r18, 0x10	; 16
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	02 c0       	rjmp	.+4      	; 0x570 <vfprintf+0x260>
 56c:	20 e1       	ldi	r18, 0x10	; 16
 56e:	32 e0       	ldi	r19, 0x02	; 2
 570:	f8 01       	movw	r30, r16
 572:	b7 fe       	sbrs	r11, 7
 574:	07 c0       	rjmp	.+14     	; 0x584 <vfprintf+0x274>
 576:	60 81       	ld	r22, Z
 578:	71 81       	ldd	r23, Z+1	; 0x01
 57a:	82 81       	ldd	r24, Z+2	; 0x02
 57c:	93 81       	ldd	r25, Z+3	; 0x03
 57e:	0c 5f       	subi	r16, 0xFC	; 252
 580:	1f 4f       	sbci	r17, 0xFF	; 255
 582:	06 c0       	rjmp	.+12     	; 0x590 <vfprintf+0x280>
 584:	60 81       	ld	r22, Z
 586:	71 81       	ldd	r23, Z+1	; 0x01
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 5f       	subi	r16, 0xFE	; 254
 58e:	1f 4f       	sbci	r17, 0xFF	; 255
 590:	a4 01       	movw	r20, r8
 592:	0e 94 a2 03 	call	0x744	; 0x744 <__ultoa_invert>
 596:	a8 2e       	mov	r10, r24
 598:	a8 18       	sub	r10, r8
 59a:	fb 2d       	mov	r31, r11
 59c:	ff 77       	andi	r31, 0x7F	; 127
 59e:	bf 2e       	mov	r11, r31
 5a0:	b6 fe       	sbrs	r11, 6
 5a2:	0b c0       	rjmp	.+22     	; 0x5ba <vfprintf+0x2aa>
 5a4:	2b 2d       	mov	r18, r11
 5a6:	2e 7f       	andi	r18, 0xFE	; 254
 5a8:	a5 14       	cp	r10, r5
 5aa:	50 f4       	brcc	.+20     	; 0x5c0 <vfprintf+0x2b0>
 5ac:	b4 fe       	sbrs	r11, 4
 5ae:	0a c0       	rjmp	.+20     	; 0x5c4 <vfprintf+0x2b4>
 5b0:	b2 fc       	sbrc	r11, 2
 5b2:	08 c0       	rjmp	.+16     	; 0x5c4 <vfprintf+0x2b4>
 5b4:	2b 2d       	mov	r18, r11
 5b6:	2e 7e       	andi	r18, 0xEE	; 238
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <vfprintf+0x2b4>
 5ba:	7a 2c       	mov	r7, r10
 5bc:	2b 2d       	mov	r18, r11
 5be:	03 c0       	rjmp	.+6      	; 0x5c6 <vfprintf+0x2b6>
 5c0:	7a 2c       	mov	r7, r10
 5c2:	01 c0       	rjmp	.+2      	; 0x5c6 <vfprintf+0x2b6>
 5c4:	75 2c       	mov	r7, r5
 5c6:	24 ff       	sbrs	r18, 4
 5c8:	0d c0       	rjmp	.+26     	; 0x5e4 <vfprintf+0x2d4>
 5ca:	fe 01       	movw	r30, r28
 5cc:	ea 0d       	add	r30, r10
 5ce:	f1 1d       	adc	r31, r1
 5d0:	80 81       	ld	r24, Z
 5d2:	80 33       	cpi	r24, 0x30	; 48
 5d4:	11 f4       	brne	.+4      	; 0x5da <vfprintf+0x2ca>
 5d6:	29 7e       	andi	r18, 0xE9	; 233
 5d8:	09 c0       	rjmp	.+18     	; 0x5ec <vfprintf+0x2dc>
 5da:	22 ff       	sbrs	r18, 2
 5dc:	06 c0       	rjmp	.+12     	; 0x5ea <vfprintf+0x2da>
 5de:	73 94       	inc	r7
 5e0:	73 94       	inc	r7
 5e2:	04 c0       	rjmp	.+8      	; 0x5ec <vfprintf+0x2dc>
 5e4:	82 2f       	mov	r24, r18
 5e6:	86 78       	andi	r24, 0x86	; 134
 5e8:	09 f0       	breq	.+2      	; 0x5ec <vfprintf+0x2dc>
 5ea:	73 94       	inc	r7
 5ec:	23 fd       	sbrc	r18, 3
 5ee:	13 c0       	rjmp	.+38     	; 0x616 <vfprintf+0x306>
 5f0:	20 ff       	sbrs	r18, 0
 5f2:	06 c0       	rjmp	.+12     	; 0x600 <vfprintf+0x2f0>
 5f4:	5a 2c       	mov	r5, r10
 5f6:	73 14       	cp	r7, r3
 5f8:	18 f4       	brcc	.+6      	; 0x600 <vfprintf+0x2f0>
 5fa:	53 0c       	add	r5, r3
 5fc:	57 18       	sub	r5, r7
 5fe:	73 2c       	mov	r7, r3
 600:	73 14       	cp	r7, r3
 602:	68 f4       	brcc	.+26     	; 0x61e <vfprintf+0x30e>
 604:	b7 01       	movw	r22, r14
 606:	80 e2       	ldi	r24, 0x20	; 32
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	2c 87       	std	Y+12, r18	; 0x0c
 60c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 610:	73 94       	inc	r7
 612:	2c 85       	ldd	r18, Y+12	; 0x0c
 614:	f5 cf       	rjmp	.-22     	; 0x600 <vfprintf+0x2f0>
 616:	73 14       	cp	r7, r3
 618:	10 f4       	brcc	.+4      	; 0x61e <vfprintf+0x30e>
 61a:	37 18       	sub	r3, r7
 61c:	01 c0       	rjmp	.+2      	; 0x620 <vfprintf+0x310>
 61e:	31 2c       	mov	r3, r1
 620:	24 ff       	sbrs	r18, 4
 622:	12 c0       	rjmp	.+36     	; 0x648 <vfprintf+0x338>
 624:	b7 01       	movw	r22, r14
 626:	80 e3       	ldi	r24, 0x30	; 48
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	2c 87       	std	Y+12, r18	; 0x0c
 62c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 630:	2c 85       	ldd	r18, Y+12	; 0x0c
 632:	22 ff       	sbrs	r18, 2
 634:	17 c0       	rjmp	.+46     	; 0x664 <vfprintf+0x354>
 636:	21 ff       	sbrs	r18, 1
 638:	03 c0       	rjmp	.+6      	; 0x640 <vfprintf+0x330>
 63a:	88 e5       	ldi	r24, 0x58	; 88
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	02 c0       	rjmp	.+4      	; 0x644 <vfprintf+0x334>
 640:	88 e7       	ldi	r24, 0x78	; 120
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	b7 01       	movw	r22, r14
 646:	0c c0       	rjmp	.+24     	; 0x660 <vfprintf+0x350>
 648:	82 2f       	mov	r24, r18
 64a:	86 78       	andi	r24, 0x86	; 134
 64c:	59 f0       	breq	.+22     	; 0x664 <vfprintf+0x354>
 64e:	21 fd       	sbrc	r18, 1
 650:	02 c0       	rjmp	.+4      	; 0x656 <vfprintf+0x346>
 652:	80 e2       	ldi	r24, 0x20	; 32
 654:	01 c0       	rjmp	.+2      	; 0x658 <vfprintf+0x348>
 656:	8b e2       	ldi	r24, 0x2B	; 43
 658:	27 fd       	sbrc	r18, 7
 65a:	8d e2       	ldi	r24, 0x2D	; 45
 65c:	b7 01       	movw	r22, r14
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 664:	a5 14       	cp	r10, r5
 666:	38 f4       	brcc	.+14     	; 0x676 <vfprintf+0x366>
 668:	b7 01       	movw	r22, r14
 66a:	80 e3       	ldi	r24, 0x30	; 48
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 672:	5a 94       	dec	r5
 674:	f7 cf       	rjmp	.-18     	; 0x664 <vfprintf+0x354>
 676:	aa 94       	dec	r10
 678:	f4 01       	movw	r30, r8
 67a:	ea 0d       	add	r30, r10
 67c:	f1 1d       	adc	r31, r1
 67e:	80 81       	ld	r24, Z
 680:	b7 01       	movw	r22, r14
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 688:	a1 10       	cpse	r10, r1
 68a:	f5 cf       	rjmp	.-22     	; 0x676 <vfprintf+0x366>
 68c:	33 20       	and	r3, r3
 68e:	09 f4       	brne	.+2      	; 0x692 <vfprintf+0x382>
 690:	51 ce       	rjmp	.-862    	; 0x334 <vfprintf+0x24>
 692:	b7 01       	movw	r22, r14
 694:	80 e2       	ldi	r24, 0x20	; 32
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 70 03 	call	0x6e0	; 0x6e0 <fputc>
 69c:	3a 94       	dec	r3
 69e:	f6 cf       	rjmp	.-20     	; 0x68c <vfprintf+0x37c>
 6a0:	f7 01       	movw	r30, r14
 6a2:	86 81       	ldd	r24, Z+6	; 0x06
 6a4:	97 81       	ldd	r25, Z+7	; 0x07
 6a6:	02 c0       	rjmp	.+4      	; 0x6ac <vfprintf+0x39c>
 6a8:	8f ef       	ldi	r24, 0xFF	; 255
 6aa:	9f ef       	ldi	r25, 0xFF	; 255
 6ac:	2c 96       	adiw	r28, 0x0c	; 12
 6ae:	e2 e1       	ldi	r30, 0x12	; 18
 6b0:	0c 94 1c 04 	jmp	0x838	; 0x838 <__epilogue_restores__>

000006b4 <strnlen_P>:
 6b4:	fc 01       	movw	r30, r24
 6b6:	05 90       	lpm	r0, Z+
 6b8:	61 50       	subi	r22, 0x01	; 1
 6ba:	70 40       	sbci	r23, 0x00	; 0
 6bc:	01 10       	cpse	r0, r1
 6be:	d8 f7       	brcc	.-10     	; 0x6b6 <strnlen_P+0x2>
 6c0:	80 95       	com	r24
 6c2:	90 95       	com	r25
 6c4:	8e 0f       	add	r24, r30
 6c6:	9f 1f       	adc	r25, r31
 6c8:	08 95       	ret

000006ca <strnlen>:
 6ca:	fc 01       	movw	r30, r24
 6cc:	61 50       	subi	r22, 0x01	; 1
 6ce:	70 40       	sbci	r23, 0x00	; 0
 6d0:	01 90       	ld	r0, Z+
 6d2:	01 10       	cpse	r0, r1
 6d4:	d8 f7       	brcc	.-10     	; 0x6cc <strnlen+0x2>
 6d6:	80 95       	com	r24
 6d8:	90 95       	com	r25
 6da:	8e 0f       	add	r24, r30
 6dc:	9f 1f       	adc	r25, r31
 6de:	08 95       	ret

000006e0 <fputc>:
 6e0:	0f 93       	push	r16
 6e2:	1f 93       	push	r17
 6e4:	cf 93       	push	r28
 6e6:	df 93       	push	r29
 6e8:	18 2f       	mov	r17, r24
 6ea:	09 2f       	mov	r16, r25
 6ec:	eb 01       	movw	r28, r22
 6ee:	8b 81       	ldd	r24, Y+3	; 0x03
 6f0:	81 fd       	sbrc	r24, 1
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <fputc+0x1a>
 6f4:	8f ef       	ldi	r24, 0xFF	; 255
 6f6:	9f ef       	ldi	r25, 0xFF	; 255
 6f8:	20 c0       	rjmp	.+64     	; 0x73a <fputc+0x5a>
 6fa:	82 ff       	sbrs	r24, 2
 6fc:	10 c0       	rjmp	.+32     	; 0x71e <fputc+0x3e>
 6fe:	4e 81       	ldd	r20, Y+6	; 0x06
 700:	5f 81       	ldd	r21, Y+7	; 0x07
 702:	2c 81       	ldd	r18, Y+4	; 0x04
 704:	3d 81       	ldd	r19, Y+5	; 0x05
 706:	42 17       	cp	r20, r18
 708:	53 07       	cpc	r21, r19
 70a:	7c f4       	brge	.+30     	; 0x72a <fputc+0x4a>
 70c:	e8 81       	ld	r30, Y
 70e:	f9 81       	ldd	r31, Y+1	; 0x01
 710:	9f 01       	movw	r18, r30
 712:	2f 5f       	subi	r18, 0xFF	; 255
 714:	3f 4f       	sbci	r19, 0xFF	; 255
 716:	39 83       	std	Y+1, r19	; 0x01
 718:	28 83       	st	Y, r18
 71a:	10 83       	st	Z, r17
 71c:	06 c0       	rjmp	.+12     	; 0x72a <fputc+0x4a>
 71e:	e8 85       	ldd	r30, Y+8	; 0x08
 720:	f9 85       	ldd	r31, Y+9	; 0x09
 722:	81 2f       	mov	r24, r17
 724:	09 95       	icall
 726:	89 2b       	or	r24, r25
 728:	29 f7       	brne	.-54     	; 0x6f4 <fputc+0x14>
 72a:	2e 81       	ldd	r18, Y+6	; 0x06
 72c:	3f 81       	ldd	r19, Y+7	; 0x07
 72e:	2f 5f       	subi	r18, 0xFF	; 255
 730:	3f 4f       	sbci	r19, 0xFF	; 255
 732:	3f 83       	std	Y+7, r19	; 0x07
 734:	2e 83       	std	Y+6, r18	; 0x06
 736:	81 2f       	mov	r24, r17
 738:	90 2f       	mov	r25, r16
 73a:	df 91       	pop	r29
 73c:	cf 91       	pop	r28
 73e:	1f 91       	pop	r17
 740:	0f 91       	pop	r16
 742:	08 95       	ret

00000744 <__ultoa_invert>:
 744:	fa 01       	movw	r30, r20
 746:	aa 27       	eor	r26, r26
 748:	28 30       	cpi	r18, 0x08	; 8
 74a:	51 f1       	breq	.+84     	; 0x7a0 <__ultoa_invert+0x5c>
 74c:	20 31       	cpi	r18, 0x10	; 16
 74e:	81 f1       	breq	.+96     	; 0x7b0 <__ultoa_invert+0x6c>
 750:	e8 94       	clt
 752:	6f 93       	push	r22
 754:	6e 7f       	andi	r22, 0xFE	; 254
 756:	6e 5f       	subi	r22, 0xFE	; 254
 758:	7f 4f       	sbci	r23, 0xFF	; 255
 75a:	8f 4f       	sbci	r24, 0xFF	; 255
 75c:	9f 4f       	sbci	r25, 0xFF	; 255
 75e:	af 4f       	sbci	r26, 0xFF	; 255
 760:	b1 e0       	ldi	r27, 0x01	; 1
 762:	3e d0       	rcall	.+124    	; 0x7e0 <__ultoa_invert+0x9c>
 764:	b4 e0       	ldi	r27, 0x04	; 4
 766:	3c d0       	rcall	.+120    	; 0x7e0 <__ultoa_invert+0x9c>
 768:	67 0f       	add	r22, r23
 76a:	78 1f       	adc	r23, r24
 76c:	89 1f       	adc	r24, r25
 76e:	9a 1f       	adc	r25, r26
 770:	a1 1d       	adc	r26, r1
 772:	68 0f       	add	r22, r24
 774:	79 1f       	adc	r23, r25
 776:	8a 1f       	adc	r24, r26
 778:	91 1d       	adc	r25, r1
 77a:	a1 1d       	adc	r26, r1
 77c:	6a 0f       	add	r22, r26
 77e:	71 1d       	adc	r23, r1
 780:	81 1d       	adc	r24, r1
 782:	91 1d       	adc	r25, r1
 784:	a1 1d       	adc	r26, r1
 786:	20 d0       	rcall	.+64     	; 0x7c8 <__ultoa_invert+0x84>
 788:	09 f4       	brne	.+2      	; 0x78c <__ultoa_invert+0x48>
 78a:	68 94       	set
 78c:	3f 91       	pop	r19
 78e:	2a e0       	ldi	r18, 0x0A	; 10
 790:	26 9f       	mul	r18, r22
 792:	11 24       	eor	r1, r1
 794:	30 19       	sub	r19, r0
 796:	30 5d       	subi	r19, 0xD0	; 208
 798:	31 93       	st	Z+, r19
 79a:	de f6       	brtc	.-74     	; 0x752 <__ultoa_invert+0xe>
 79c:	cf 01       	movw	r24, r30
 79e:	08 95       	ret
 7a0:	46 2f       	mov	r20, r22
 7a2:	47 70       	andi	r20, 0x07	; 7
 7a4:	40 5d       	subi	r20, 0xD0	; 208
 7a6:	41 93       	st	Z+, r20
 7a8:	b3 e0       	ldi	r27, 0x03	; 3
 7aa:	0f d0       	rcall	.+30     	; 0x7ca <__ultoa_invert+0x86>
 7ac:	c9 f7       	brne	.-14     	; 0x7a0 <__ultoa_invert+0x5c>
 7ae:	f6 cf       	rjmp	.-20     	; 0x79c <__ultoa_invert+0x58>
 7b0:	46 2f       	mov	r20, r22
 7b2:	4f 70       	andi	r20, 0x0F	; 15
 7b4:	40 5d       	subi	r20, 0xD0	; 208
 7b6:	4a 33       	cpi	r20, 0x3A	; 58
 7b8:	18 f0       	brcs	.+6      	; 0x7c0 <__ultoa_invert+0x7c>
 7ba:	49 5d       	subi	r20, 0xD9	; 217
 7bc:	31 fd       	sbrc	r19, 1
 7be:	40 52       	subi	r20, 0x20	; 32
 7c0:	41 93       	st	Z+, r20
 7c2:	02 d0       	rcall	.+4      	; 0x7c8 <__ultoa_invert+0x84>
 7c4:	a9 f7       	brne	.-22     	; 0x7b0 <__ultoa_invert+0x6c>
 7c6:	ea cf       	rjmp	.-44     	; 0x79c <__ultoa_invert+0x58>
 7c8:	b4 e0       	ldi	r27, 0x04	; 4
 7ca:	a6 95       	lsr	r26
 7cc:	97 95       	ror	r25
 7ce:	87 95       	ror	r24
 7d0:	77 95       	ror	r23
 7d2:	67 95       	ror	r22
 7d4:	ba 95       	dec	r27
 7d6:	c9 f7       	brne	.-14     	; 0x7ca <__ultoa_invert+0x86>
 7d8:	00 97       	sbiw	r24, 0x00	; 0
 7da:	61 05       	cpc	r22, r1
 7dc:	71 05       	cpc	r23, r1
 7de:	08 95       	ret
 7e0:	9b 01       	movw	r18, r22
 7e2:	ac 01       	movw	r20, r24
 7e4:	0a 2e       	mov	r0, r26
 7e6:	06 94       	lsr	r0
 7e8:	57 95       	ror	r21
 7ea:	47 95       	ror	r20
 7ec:	37 95       	ror	r19
 7ee:	27 95       	ror	r18
 7f0:	ba 95       	dec	r27
 7f2:	c9 f7       	brne	.-14     	; 0x7e6 <__ultoa_invert+0xa2>
 7f4:	62 0f       	add	r22, r18
 7f6:	73 1f       	adc	r23, r19
 7f8:	84 1f       	adc	r24, r20
 7fa:	95 1f       	adc	r25, r21
 7fc:	a0 1d       	adc	r26, r0
 7fe:	08 95       	ret

00000800 <__prologue_saves__>:
 800:	2f 92       	push	r2
 802:	3f 92       	push	r3
 804:	4f 92       	push	r4
 806:	5f 92       	push	r5
 808:	6f 92       	push	r6
 80a:	7f 92       	push	r7
 80c:	8f 92       	push	r8
 80e:	9f 92       	push	r9
 810:	af 92       	push	r10
 812:	bf 92       	push	r11
 814:	cf 92       	push	r12
 816:	df 92       	push	r13
 818:	ef 92       	push	r14
 81a:	ff 92       	push	r15
 81c:	0f 93       	push	r16
 81e:	1f 93       	push	r17
 820:	cf 93       	push	r28
 822:	df 93       	push	r29
 824:	cd b7       	in	r28, 0x3d	; 61
 826:	de b7       	in	r29, 0x3e	; 62
 828:	ca 1b       	sub	r28, r26
 82a:	db 0b       	sbc	r29, r27
 82c:	0f b6       	in	r0, 0x3f	; 63
 82e:	f8 94       	cli
 830:	de bf       	out	0x3e, r29	; 62
 832:	0f be       	out	0x3f, r0	; 63
 834:	cd bf       	out	0x3d, r28	; 61
 836:	09 94       	ijmp

00000838 <__epilogue_restores__>:
 838:	2a 88       	ldd	r2, Y+18	; 0x12
 83a:	39 88       	ldd	r3, Y+17	; 0x11
 83c:	48 88       	ldd	r4, Y+16	; 0x10
 83e:	5f 84       	ldd	r5, Y+15	; 0x0f
 840:	6e 84       	ldd	r6, Y+14	; 0x0e
 842:	7d 84       	ldd	r7, Y+13	; 0x0d
 844:	8c 84       	ldd	r8, Y+12	; 0x0c
 846:	9b 84       	ldd	r9, Y+11	; 0x0b
 848:	aa 84       	ldd	r10, Y+10	; 0x0a
 84a:	b9 84       	ldd	r11, Y+9	; 0x09
 84c:	c8 84       	ldd	r12, Y+8	; 0x08
 84e:	df 80       	ldd	r13, Y+7	; 0x07
 850:	ee 80       	ldd	r14, Y+6	; 0x06
 852:	fd 80       	ldd	r15, Y+5	; 0x05
 854:	0c 81       	ldd	r16, Y+4	; 0x04
 856:	1b 81       	ldd	r17, Y+3	; 0x03
 858:	aa 81       	ldd	r26, Y+2	; 0x02
 85a:	b9 81       	ldd	r27, Y+1	; 0x01
 85c:	ce 0f       	add	r28, r30
 85e:	d1 1d       	adc	r29, r1
 860:	0f b6       	in	r0, 0x3f	; 63
 862:	f8 94       	cli
 864:	de bf       	out	0x3e, r29	; 62
 866:	0f be       	out	0x3f, r0	; 63
 868:	cd bf       	out	0x3d, r28	; 61
 86a:	ed 01       	movw	r28, r26
 86c:	08 95       	ret

0000086e <_exit>:
 86e:	f8 94       	cli

00000870 <__stop_program>:
 870:	ff cf       	rjmp	.-2      	; 0x870 <__stop_program>
